平衡二叉树(AVL树)定义:
    提升查找二叉搜索树的效率N到logN
    平衡因子(所有节点相对于左右子树高度差)的绝对值不大于1
    1.大于1且val小于左孩子,右旋
    2.小于-1且val大于右孩子,左旋
    3.大于1且val大于左孩子,左旋左孩子,右旋
    4.小于1且val小于右孩子,右旋右孩子,左旋

左旋:新根左放旧根右;右旋:新根右放旧根左.
口诀:1.拿到x;2.拿到T2;3.x.right=y;4.y.let=T2;四步走,只更新x和y高度

--------------------------------------------------------------------------------------------------------------------
红黑树定义:
    1.二叉搜索树
    2.不是黑就是红,根必须是黑,红节点一定有两个黑节点(可以连续黑)
    3.叶子节点(都是null)并且都是黑
    4.每条路径黑色节点数相同(保持平衡的关键)
    5.最长路径<=最短路径*2


tips:
    a.插入点设为红比较简单
    b.强制根为黑只需要在插入函数调整后改一下root的颜色就行了

插入调整:
    1.父为根或为黑,直接设置为黑
    2.叔为红, 直接改变三个节点颜色, 递交祖父节点递归
    3.叔为空, 旋转, 祖父变红, 祖父的父变黑